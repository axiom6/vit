var Connect;import Util from"../util/Util.js";Connect=function(){class t{constructor(t,e,s,n,r){this.ui=t,this.stream=e,this.view=s,this.page=n,this.practice=r,this.name=this.practice.name,this.msgs={}}ready(){[this.west,this.east,this.north,this.south,this.prev,this.next]=this.adjacentConnects(),this.subscribe()}subscribe(){return this.stream.subscribe("Select","Connect",t=>this.onSelect(t)),this.stream.subscribe("Content","Connect",t=>this.onContent(t)),this.stream.subscribe("Connect","Connect",t=>this.onConnect(t)),this.stream.subscribe("Test","Connect",t=>this.onTest(t))}adjacentConnects(){var t,e,s,n,r,i,o,a;if(e=[],null==this.practice.column)return e;for(n=0,r=(a=["east","west","north","south"]).length;n<r;n++)s=a[n],t="Empty"!==(i="None"!==(o=this.practice[s]).name?this.view.getPaneOrGroup(o.name,!1):this.view.$empty).name&&null!=i.page?i.page.connect:{name:"None"},e.push(t);return e}onSelect(t){t.name,this.name}onContent(t){"Connect"===t.content&&(t.practice,this.name)}onTest(e){switch(e){case"Populate":this.stream.publish("Content",{content:"Connect",name:"All"}),t.testPopulate(this.stream);break;case"Migrate":this.stream.publish("Content",{content:"Connect",name:"All"}),t.testMigrate(this.ui.prac)}}onConnect(t){if(this.isSrc(t)&&this.isMsg(t)){switch(t.dir=this.dir(t),t.type){case"Convey":this.onConvey(t);break;case"Flow":this.onFlow(t);break;case"Conduit":this.onConduit(t);break;default:console.error("Connect.onConnect() unknown msg type",t.type)}"Beg"!==t.status&&console.error("Connect.onConnect() msg not processed",t.name,t.id)}}onConvey(t){if(this.isConvey(t))return t.src==="To"+this.name?this.onItem(t,t.dir):t.src===this.west.name?this.onItem(t,"West"):t.src===this.east.name&&this.onItem(t,"East"),this.msgs[t.id]=t,t.status="Beg"}onFlow(t){if(this.isFlow(t))return t.src==="To"+this.name?this.onItem(t,t.dir):t.src===this.north.name?this.onItem(t,"North"):t.src===this.south.name&&this.onItem(t,"South"),this.msgs[t.id]=t,t.status="Beg"}onConduit(t){if(this.isConduit(t))return t.src==="To"+this.name?this.onItem(t,t.dir):t.src===this.prev.name?this.onItem(t,"Prev"):t.src===this.next.name&&this.onItem(t,"Next"),this.msgs[t.id]=t,t.status="Beg"}toWest(t){return this.migrate(t,"West")}toEast(t){return this.migrate(t,"East")}toNorth(t){return this.migrate(t,"North")}toSouth(t){return this.migrate(t,"South")}toPrev(t){return this.migrate(t,"Prev")}toNext(t){return this.migrate(t,"Next")}migrate(t,e){var s;if(this.canMigrate(t,e))return s=this.msgs[t],this.rmItem(s),s.dir=e,s.src=this.name,this.connect(e).onConnect(s),delete this.msgs[s.id]}canMigrate(t,e){var s;return null!=(s=this.msgs[t])&&this.dirOk(s,e)&&this.isConnected(e)}onItem(t,e){var s;s=this.page.contents.connect.htmlId+e,this.page.contents.connect.$.find("#"+s).append(`<li id="${s+t.id}">${t.name}</li>`),t.dir=e}rmItem(t){var e;e=this.page.contents.connect.htmlId+t.dir+t.id,this.page.contents.connect.$.find("#"+e).remove()}dir(t){var e;if(e=t.dir,"To"===t.src.substring(0,2))switch(this.practice.column){case"Embrace":e="West";break;case"Encourage":e="East";break;case"Innovate":switch(this.practice.row){case"Learn":e="North";break;case"Do":e="Next";break;case"Share":e="South";break;default:e=t.dir}break;default:e=t.dir}return e}isSrc(t){if(null==t||null==t.src||null==t.type)return!1;if(t.src==="To"+this.name)return!0;switch(t.type){case"Convey":return t.src===this.west.name||t.src===this.east.name;case"Flow":return t.src===this.north.name||t.src===this.south.name;case"Conduit":return t.src===this.prev.name||t.src===this.next.name;default:return!1}}isMsg(t){var e;return e=null!=t&&null!=t.id&&null!=t.name&&this.isType(t.type)&&this.isDir(t.dir)&&this.isStatus(t.status),null==t&&console.error("Connect.isMsg()","msg      null"),null!=t&&null==t.id&&console.error("Connect.isMsg()","msg.id   null"),null!=t&&null==t.name&&console.error("Connect.isMsg()","msg.name null"),e}isConvey(t){return"Convey"===t.type&&null==this.msgs[t.id]}isFlow(t){return"Flow"===t.type&&null==this.msgs[t.id]}isConduit(t){return"Conduit"===t.type&&null==this.msgs[t.id]}isType(e){var s;return(s=Util.contains(t.MsgTypeEnum,e))||console.error(`Connect.isType() enum ${e} not`,t.MsgTypeEnum),s}isDir(e){var s;return(s=Util.contains(t.DirEnum,e))||console.error(`Connect.isDir() enum ${e} not`,t.DirEnum),s}isStatus(e){var s;return(s=Util.contains(t.StatusEnum,e))||console.error(`Connect.isStatus() enum ${e} not`,t.StatusEnum),s}isConnected(t){return"None"!==this.connect(t).name}dirOk(t,e){switch(e){case"West":case"East":return"Convey"===t.type;case"North":case"South":return"Flow"===t.type;case"Prev":case"Next":return"Conduit"===t.type;default:return!1}}connect(t){switch(t){case"West":return this.west;case"East":return this.east;case"North":return this.north;case"South":return this.south;case"Prev":return this.prev;case"Next":return this.next;default:return console.error("Connect.toConnect() unknown direction",t),this.west}}static msg(e,s,n,r,i="Beg"){var o;return"West",o={id:e,name:s,type:n,src:r,dir:"West",status:i},t.msgs.push(o),o}static testPopulate(e){var s,n,r,i,o,a,c,h,u;return s=t.msg(1,"Person","Convey","ToCollaborate"),e.publish("Connect",s),n=t.msg(2,"Entitle","Flow","ToConcept"),e.publish("Connect",n),r=t.msg(3,"Channel","Convey","ToDiscover"),e.publish("Connect",r),i=t.msg(4,"Trace","Convey","ToAdapt"),e.publish("Connect",i),o=t.msg(5,"Screen","Flow","ToTechnology"),e.publish("Connect",o),a=t.msg(6,"Review","Convey","ToBenefit"),e.publish("Connect",a),c=t.msg(7,"Config","Convey","ToChange"),e.publish("Connect",c),h=t.msg(8,"Support","Flow","ToFacilitate"),e.publish("Connect",h),u=t.msg(9,"Comply","Convey","ToGovern"),e.publish("Connect",u)}static testMigrate(e){if(!t.migrateComplete)return e.migrateConnectMsg(1,"East"),e.migrateConnectMsg(2,"South"),e.migrateConnectMsg(3,"West"),e.migrateConnectMsg(4,"East"),e.migrateConnectMsg(6,"West"),e.migrateConnectMsg(7,"East"),e.migrateConnectMsg(8,"North"),e.migrateConnectMsg(9,"West"),t.migrateComplete=!0}}return Aug.Connect=t,t.id=0,t.msgs=[],Util.noop(t.toWest,t.toEast,t.toNorth,t.toSouth,t.toPrev,t.toNext),t}.call(this);export default Connect;